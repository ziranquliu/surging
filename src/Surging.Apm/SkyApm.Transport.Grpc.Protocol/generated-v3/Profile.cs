// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: profile/Profile.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SkyWalking.NetworkProtocol.V3 {

  /// <summary>Holder for reflection information generated from profile/Profile.proto</summary>
  public static partial class ProfileReflection {

    #region Descriptor
    /// <summary>File descriptor for profile/Profile.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProfileReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVwcm9maWxlL1Byb2ZpbGUucHJvdG8aE2NvbW1vbi9Db21tb24ucHJvdG8i",
            "XAoXUHJvZmlsZVRhc2tDb21tYW5kUXVlcnkSDwoHc2VydmljZRgBIAEoCRIX",
            "Cg9zZXJ2aWNlSW5zdGFuY2UYAiABKAkSFwoPbGFzdENvbW1hbmRUaW1lGAMg",
            "ASgDInUKDlRocmVhZFNuYXBzaG90Eg4KBnRhc2tJZBgBIAEoCRIWCg50cmFj",
            "ZVNlZ21lbnRJZBgCIAEoCRIMCgR0aW1lGAMgASgDEhAKCHNlcXVlbmNlGAQg",
            "ASgFEhsKBXN0YWNrGAUgASgLMgwuVGhyZWFkU3RhY2siJQoLVGhyZWFkU3Rh",
            "Y2sSFgoOY29kZVNpZ25hdHVyZXMYASADKAkiUwoXUHJvZmlsZVRhc2tGaW5p",
            "c2hSZXBvcnQSDwoHc2VydmljZRgBIAEoCRIXCg9zZXJ2aWNlSW5zdGFuY2UY",
            "AiABKAkSDgoGdGFza0lkGAMgASgJMrwBCgtQcm9maWxlVGFzaxI/ChZnZXRQ",
            "cm9maWxlVGFza0NvbW1hbmRzEhguUHJvZmlsZVRhc2tDb21tYW5kUXVlcnka",
            "CS5Db21tYW5kcyIAEjEKD2NvbGxlY3RTbmFwc2hvdBIPLlRocmVhZFNuYXBz",
            "aG90GgkuQ29tbWFuZHMiACgBEjkKEHJlcG9ydFRhc2tGaW5pc2gSGC5Qcm9m",
            "aWxlVGFza0ZpbmlzaFJlcG9ydBoJLkNvbW1hbmRzIgBCgQEKNW9yZy5hcGFj",
            "aGUuc2t5d2Fsa2luZy5hcG0ubmV0d29yay5sYW5ndWFnZS5wcm9maWxlLnYz",
            "UAFaJnNreXdhbGtpbmcvbmV0d29yay9sYW5ndWFnZS9wcm9maWxlL3YzqgId",
            "U2t5V2Fsa2luZy5OZXR3b3JrUHJvdG9jb2wuVjNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::SkyWalking.NetworkProtocol.V3.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SkyWalking.NetworkProtocol.V3.ProfileTaskCommandQuery), global::SkyWalking.NetworkProtocol.V3.ProfileTaskCommandQuery.Parser, new[]{ "Service", "ServiceInstance", "LastCommandTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SkyWalking.NetworkProtocol.V3.ThreadSnapshot), global::SkyWalking.NetworkProtocol.V3.ThreadSnapshot.Parser, new[]{ "TaskId", "TraceSegmentId", "Time", "Sequence", "Stack" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SkyWalking.NetworkProtocol.V3.ThreadStack), global::SkyWalking.NetworkProtocol.V3.ThreadStack.Parser, new[]{ "CodeSignatures" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SkyWalking.NetworkProtocol.V3.ProfileTaskFinishReport), global::SkyWalking.NetworkProtocol.V3.ProfileTaskFinishReport.Parser, new[]{ "Service", "ServiceInstance", "TaskId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ProfileTaskCommandQuery : pb::IMessage<ProfileTaskCommandQuery> {
    private static readonly pb::MessageParser<ProfileTaskCommandQuery> _parser = new pb::MessageParser<ProfileTaskCommandQuery>(() => new ProfileTaskCommandQuery());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProfileTaskCommandQuery> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SkyWalking.NetworkProtocol.V3.ProfileReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProfileTaskCommandQuery() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProfileTaskCommandQuery(ProfileTaskCommandQuery other) : this() {
      service_ = other.service_;
      serviceInstance_ = other.serviceInstance_;
      lastCommandTime_ = other.lastCommandTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProfileTaskCommandQuery Clone() {
      return new ProfileTaskCommandQuery(this);
    }

    /// <summary>Field number for the "service" field.</summary>
    public const int ServiceFieldNumber = 1;
    private string service_ = "";
    /// <summary>
    /// current sniffer information
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Service {
      get { return service_; }
      set {
        service_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "serviceInstance" field.</summary>
    public const int ServiceInstanceFieldNumber = 2;
    private string serviceInstance_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceInstance {
      get { return serviceInstance_; }
      set {
        serviceInstance_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lastCommandTime" field.</summary>
    public const int LastCommandTimeFieldNumber = 3;
    private long lastCommandTime_;
    /// <summary>
    /// last command timestamp
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LastCommandTime {
      get { return lastCommandTime_; }
      set {
        lastCommandTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProfileTaskCommandQuery);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProfileTaskCommandQuery other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Service != other.Service) return false;
      if (ServiceInstance != other.ServiceInstance) return false;
      if (LastCommandTime != other.LastCommandTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Service.Length != 0) hash ^= Service.GetHashCode();
      if (ServiceInstance.Length != 0) hash ^= ServiceInstance.GetHashCode();
      if (LastCommandTime != 0L) hash ^= LastCommandTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Service.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Service);
      }
      if (ServiceInstance.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ServiceInstance);
      }
      if (LastCommandTime != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(LastCommandTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Service.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Service);
      }
      if (ServiceInstance.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceInstance);
      }
      if (LastCommandTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastCommandTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProfileTaskCommandQuery other) {
      if (other == null) {
        return;
      }
      if (other.Service.Length != 0) {
        Service = other.Service;
      }
      if (other.ServiceInstance.Length != 0) {
        ServiceInstance = other.ServiceInstance;
      }
      if (other.LastCommandTime != 0L) {
        LastCommandTime = other.LastCommandTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Service = input.ReadString();
            break;
          }
          case 18: {
            ServiceInstance = input.ReadString();
            break;
          }
          case 24: {
            LastCommandTime = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// dumped thread snapshot
  /// </summary>
  public sealed partial class ThreadSnapshot : pb::IMessage<ThreadSnapshot> {
    private static readonly pb::MessageParser<ThreadSnapshot> _parser = new pb::MessageParser<ThreadSnapshot>(() => new ThreadSnapshot());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ThreadSnapshot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SkyWalking.NetworkProtocol.V3.ProfileReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThreadSnapshot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThreadSnapshot(ThreadSnapshot other) : this() {
      taskId_ = other.taskId_;
      traceSegmentId_ = other.traceSegmentId_;
      time_ = other.time_;
      sequence_ = other.sequence_;
      stack_ = other.stack_ != null ? other.stack_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThreadSnapshot Clone() {
      return new ThreadSnapshot(this);
    }

    /// <summary>Field number for the "taskId" field.</summary>
    public const int TaskIdFieldNumber = 1;
    private string taskId_ = "";
    /// <summary>
    /// profile task id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskId {
      get { return taskId_; }
      set {
        taskId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "traceSegmentId" field.</summary>
    public const int TraceSegmentIdFieldNumber = 2;
    private string traceSegmentId_ = "";
    /// <summary>
    /// dumped segment id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TraceSegmentId {
      get { return traceSegmentId_; }
      set {
        traceSegmentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 3;
    private long time_;
    /// <summary>
    /// dump timestamp
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "sequence" field.</summary>
    public const int SequenceFieldNumber = 4;
    private int sequence_;
    /// <summary>
    /// snapshot dump sequence, start with zero
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sequence {
      get { return sequence_; }
      set {
        sequence_ = value;
      }
    }

    /// <summary>Field number for the "stack" field.</summary>
    public const int StackFieldNumber = 5;
    private global::SkyWalking.NetworkProtocol.V3.ThreadStack stack_;
    /// <summary>
    /// snapshot stack
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SkyWalking.NetworkProtocol.V3.ThreadStack Stack {
      get { return stack_; }
      set {
        stack_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ThreadSnapshot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ThreadSnapshot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TaskId != other.TaskId) return false;
      if (TraceSegmentId != other.TraceSegmentId) return false;
      if (Time != other.Time) return false;
      if (Sequence != other.Sequence) return false;
      if (!object.Equals(Stack, other.Stack)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TaskId.Length != 0) hash ^= TaskId.GetHashCode();
      if (TraceSegmentId.Length != 0) hash ^= TraceSegmentId.GetHashCode();
      if (Time != 0L) hash ^= Time.GetHashCode();
      if (Sequence != 0) hash ^= Sequence.GetHashCode();
      if (stack_ != null) hash ^= Stack.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TaskId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TaskId);
      }
      if (TraceSegmentId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TraceSegmentId);
      }
      if (Time != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Time);
      }
      if (Sequence != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Sequence);
      }
      if (stack_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Stack);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TaskId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskId);
      }
      if (TraceSegmentId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TraceSegmentId);
      }
      if (Time != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Time);
      }
      if (Sequence != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sequence);
      }
      if (stack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stack);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ThreadSnapshot other) {
      if (other == null) {
        return;
      }
      if (other.TaskId.Length != 0) {
        TaskId = other.TaskId;
      }
      if (other.TraceSegmentId.Length != 0) {
        TraceSegmentId = other.TraceSegmentId;
      }
      if (other.Time != 0L) {
        Time = other.Time;
      }
      if (other.Sequence != 0) {
        Sequence = other.Sequence;
      }
      if (other.stack_ != null) {
        if (stack_ == null) {
          Stack = new global::SkyWalking.NetworkProtocol.V3.ThreadStack();
        }
        Stack.MergeFrom(other.Stack);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TaskId = input.ReadString();
            break;
          }
          case 18: {
            TraceSegmentId = input.ReadString();
            break;
          }
          case 24: {
            Time = input.ReadInt64();
            break;
          }
          case 32: {
            Sequence = input.ReadInt32();
            break;
          }
          case 42: {
            if (stack_ == null) {
              Stack = new global::SkyWalking.NetworkProtocol.V3.ThreadStack();
            }
            input.ReadMessage(Stack);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ThreadStack : pb::IMessage<ThreadStack> {
    private static readonly pb::MessageParser<ThreadStack> _parser = new pb::MessageParser<ThreadStack>(() => new ThreadStack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ThreadStack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SkyWalking.NetworkProtocol.V3.ProfileReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThreadStack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThreadStack(ThreadStack other) : this() {
      codeSignatures_ = other.codeSignatures_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThreadStack Clone() {
      return new ThreadStack(this);
    }

    /// <summary>Field number for the "codeSignatures" field.</summary>
    public const int CodeSignaturesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_codeSignatures_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> codeSignatures_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// stack code signature list
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> CodeSignatures {
      get { return codeSignatures_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ThreadStack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ThreadStack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!codeSignatures_.Equals(other.codeSignatures_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= codeSignatures_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      codeSignatures_.WriteTo(output, _repeated_codeSignatures_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += codeSignatures_.CalculateSize(_repeated_codeSignatures_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ThreadStack other) {
      if (other == null) {
        return;
      }
      codeSignatures_.Add(other.codeSignatures_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            codeSignatures_.AddEntriesFrom(input, _repeated_codeSignatures_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// profile task finished report
  /// </summary>
  public sealed partial class ProfileTaskFinishReport : pb::IMessage<ProfileTaskFinishReport> {
    private static readonly pb::MessageParser<ProfileTaskFinishReport> _parser = new pb::MessageParser<ProfileTaskFinishReport>(() => new ProfileTaskFinishReport());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProfileTaskFinishReport> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SkyWalking.NetworkProtocol.V3.ProfileReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProfileTaskFinishReport() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProfileTaskFinishReport(ProfileTaskFinishReport other) : this() {
      service_ = other.service_;
      serviceInstance_ = other.serviceInstance_;
      taskId_ = other.taskId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProfileTaskFinishReport Clone() {
      return new ProfileTaskFinishReport(this);
    }

    /// <summary>Field number for the "service" field.</summary>
    public const int ServiceFieldNumber = 1;
    private string service_ = "";
    /// <summary>
    /// current sniffer information
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Service {
      get { return service_; }
      set {
        service_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "serviceInstance" field.</summary>
    public const int ServiceInstanceFieldNumber = 2;
    private string serviceInstance_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceInstance {
      get { return serviceInstance_; }
      set {
        serviceInstance_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "taskId" field.</summary>
    public const int TaskIdFieldNumber = 3;
    private string taskId_ = "";
    /// <summary>
    /// profile task
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskId {
      get { return taskId_; }
      set {
        taskId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProfileTaskFinishReport);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProfileTaskFinishReport other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Service != other.Service) return false;
      if (ServiceInstance != other.ServiceInstance) return false;
      if (TaskId != other.TaskId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Service.Length != 0) hash ^= Service.GetHashCode();
      if (ServiceInstance.Length != 0) hash ^= ServiceInstance.GetHashCode();
      if (TaskId.Length != 0) hash ^= TaskId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Service.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Service);
      }
      if (ServiceInstance.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ServiceInstance);
      }
      if (TaskId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TaskId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Service.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Service);
      }
      if (ServiceInstance.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceInstance);
      }
      if (TaskId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProfileTaskFinishReport other) {
      if (other == null) {
        return;
      }
      if (other.Service.Length != 0) {
        Service = other.Service;
      }
      if (other.ServiceInstance.Length != 0) {
        ServiceInstance = other.ServiceInstance;
      }
      if (other.TaskId.Length != 0) {
        TaskId = other.TaskId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Service = input.ReadString();
            break;
          }
          case 18: {
            ServiceInstance = input.ReadString();
            break;
          }
          case 26: {
            TaskId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
